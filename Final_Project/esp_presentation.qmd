---
title: "The Effects of Consultant Use on Environmental Justice Planning"
author: "Aaron Guerra"
format: 
  revealjs:
    theme: custom-moon.scss
execute:
  cache: true
bibliography: references.bib
suppress-bibliography: true
---

```{r}
#| echo: false
#| warning: false
#| output: false

# load packages, dictionary, data

library(tidyverse)
library(quanteda)
library(quanteda.textstats)
library(topicmodels)
library(tidytext)
library(tidycensus)
library(stargazer)
library(betareg)
library(broom)
library(gt)

ej_dictionary <- dictionary(list(
  identifying_disadvantaged_communities = c(
    "disadvantaged communit*", "disproprtionat* affect*",
    "pollution* burden*", "pollution*",
    "hazard*", "health effect*",
    "exposure*", "environmental degradation*",
    "CalEnviroScreen", "pollution burden*", "census tract*", "screen*", "community-specific data",
    "vulnera*", 
    "household income*","median income", "MHI", "income limit*", 
    "health risk factor*", "environmental burden*", 
    "health risk*", "community needs",
    "historical trend*", 
    "fringe communit*", "unincorporated communit*", 
    "equit*", "inequit*", 
    "low-income area*", "low-income population*", "sensitive population*",
    "minority population*",
    "racial minorit*", "communit* of color", 
    "tribal government*", "tribal culture*", 
    "environmental racism", "redlining", "disinvestment*", "segregat*", "systemic oppression"
  ),
  reducing_pollution_exposure_air_quality = c(
    "pollut*", "pollution exposure*", "reduce exposure*", "reduc* pollut*",
    "unique health risk*", "compounded health risk*", "health hazard*", 
    "air qualit*", 
    "mobile source*", "stationary source*", 
    "emission*", 
    "fossil fuel combustion",
    "vehicle miles traveled", "VMT", "mode shift", "active transportation", "zero-emission", "electric fleet*", 
    "sensitive land use*", 
    "high-volume roadway*", "major arterial*", "freeway*", "truck route*",
    "freight-handling facilit*", "manufacturing facilit*", "industrial air pollution*", 
    "mitigation procedure*", "mitigation*", "low-carbon technolog*", 
    "zero-emission vehicle*", "ZEV", 
    "solar generation", "wind generation", 
    "indoor filtration system*", "polluting substance*", "water qualit*", "soil pollution*",
    "noise",
    "asthma", "birth defect*", "cancer*", "heart disease*", "neurologic disorder*", "reproductive disorder*", 
    "involuntary exposure*", "second-hand smoke", "third-hand smoke", "tobacco smoke", "smoke-free zone*","tobacco outlet*",
    "pesticide*", "integrated pest management", "regenerative agriculture",
    "air quality management district*", "aqmd", "carb", "california air resources board", 
    "community air protection program*", "ab 617", "community emissions reduction program*",
    "air quality monitoring", "emissions control limit*", "emissions data", 
    "toxic hot spot*",
    "transitional land use*", "industrial facilit*", 
    "hazardous facilit*", "hazardous waste", "solid waste site*", "brownfield development",
    "remediation", "cleanup", 
    "near-roadway siting",
    "diesel PM", "toxic air contaminant*", "ozone", "pm 2.5",
    "groundwater threat*", "water contaminant", 
    "impaired water bod*", "toxic cleanup site*", 
    "traffic densit*"
  ),
  promoting_public_facilities = c(
    "public facilit*", "public improvement*", "public service*",
    "community center*", "librar*", "public transit", "recreation facilit*",
    "safe drinking water", "wastewater service*", 
    "active transportation infrastructure","flood control", "water drainage", 
    "health care service*", "hospital*", "health clinic*",
    "broadband access", "internet access", 
    "disaster preparedness", "recovery capacit*",
    "amenit*", "park", "parks", "trail*", "sidewalk*", "public transit"
  ),
  promoting_food_access = c(
    "food access", "healthy food*", "affordable food*", "food desert*",
    "food insecur*", "nutrition", "obesit*", 
    "food choice*", "food system*",
    "grocery store*", "farmer* market*", 
    "community garden*", "urban farm*", "convenience store*",
    "fresh produce", "food procurement polic*", 
    "food production", "food distribution", "food processing", "food consumption", 
    "waste disposal", 
    "locally grown food*", "farm to market",
    "CalFresh", 
    "food recovery program*", "SB 1383", 
    "fresh fruit*", "fresh vegetable*",
    "self-reported food insecurit*"
  ),
  promoting_safe_sanitary_homes = c(
    "safe home*", "sanitary home*", "promot* safe and sanitary home*", 
    "housing location*", "housing qualit*", "housing affordabilit*", "housing stabilit*",
    "lower income household*", "special needs household*", 
    "Regional Housing Need Allocation", "RHNA",
    "fair share planning", 
    "accessible transit", 
    "pest infestation", "water intrusion", "mold", "poor insulation",
    "exposure to toxin*", "lead exposure", "lead based paint",
    "second-hand smoke", "third-hand smoke",
    "weatherize home*", "modernize home*",
    "green building practice*", "sustainable building practice*", 
    "new housing construction", "major retrofit*", 
    "affordable housing", "unstable living condition*", "housing price*", 
    "household occupancy rate*", "overcrowded living condition*",
    "rising rent*", "displacement*","marginally housed", "homelessness", 
    "renter protection",
    "preserving affordable housing", "housing cost burden", "homelessness data",
    "household characteristic*"
  ),
  promoting_physical_activity = c(
    "physical activit*", "physical inactivit*", 
    "chronic disease*",
    "obesit*", "diabetes", "high blood pressure", "high cholesterol", "heart disease*",
    "mental health", "well-being",
    "park", "parks", "recreation", "open space", "recreational facilit*",
    "park poor", "park improvement*", 
    "no smoking polic*", 
    "joint use agreement*", "shared use agreement*",
    "active transportation", 
    "walking", "biking", "daily routine*", "perform errand*",
    "walking to work", "biking to work", "walking to school", "biking to school",
    "active design guideline*",
    "connected bike route*", "pedestrian on-street route*", 
    "infill development", "Complete Street*",
    "multimodal transit", "interconnected transit", 
    "first mile polic*", "last mile polic*",
    "covered rest area*", "shade", "age friendly seating", "bike storage", "trail network*",
    "Sustainable Communities and Climate Protection Act", "SB 375",
    "Active Transportation Program", "Safe Routes to School", "SRTS", 
    "safety of route*", "aging in place",
    "naturally occurring retirement communit*", "NORC",
    "walkable communit*",
    "park access", "unintentional injur* involving pedestrian*",
    "crash data", "walk trip* per capita", "bike trip* per capita",
    "children who walk* to school", "children who bike* to school", "children who roll* to school",
    "walk map*", "bike map*",
    "perception of safet*"
  ),
  reducing_unique_compounded_health_risks = c(
    "unique health risk*", "compounded health risk*",
    "reduce health risk*", 
    "climate change", "climate vulnerabilit*", "climate adaptation", 
    "adaptation", "resilience", "resiliency",
    "flooding", "drought", "wildfire*", "extreme heat", 
    "greenhouse gas emission*", "GHG", "vulnerable communit*",
    "temperature record*", "heat stroke", "heat-related complication*", "heat island*", "cooling center*",
    "green infrastructure", "urban forestry", "urban greening", "cool surface*", "cool roof*",
    "green roof*", "tree canop*", 
    "carbon capture", 
    "energy efficienc*",
    "drought mitigation", "stagnant water", "mosquito reproduction", "insect-borne disease*",
    "dengue", "yellow fever", 
    "sea level rise", 
    "fire hazard severity zone*", "FHSZ",
    "precipitation change*", "snowpack loss", "extreme precipitation event*",
    "extended drought scenario*", "wildfire threat*", "air conditioning access"
  ),
  promoting_civic_engagement = c(
    "civic engagement", 
    "public decision-making process*", "public participation",
    "community engagement", "community vision*", 
    "local histor*", "relationship*", "trust", "rebuild trust",
    "community-based organization*", "CBO*", 
    "advocacy group*", 
    "trusted leader*",
    "barrier* to participation", "time conflict*",
    "meeting format*", "planning process*", "ongoing engagement",
    "general plan implementation", 
    "local neighborhood-level specific plan*", 
    "revitalization effort*", 
    "community-facing program*", 
    "community input", "community buy-in", "community support",
    "stakeholder communit*", "community advisory committee"
  )
  ))

plan_corpus <- readRDS("plans_corpus_doc.rds") 

plan_metadata <- read_csv('plans_metadata.csv') %>% 
  mutate(consultant_name = ifelse(consultant_name == "Unknown",
                                  NA_character_,
                                  consultant_name),
         consultant_binary = ifelse(is.na(consultant_name), 0, 1),
         consultant_list = str_split(consultant_name, pattern = ";\\s*")
         )

docvars(plan_corpus) <- plan_metadata

plan_corpus <- corpus_subset(plan_corpus, (plan_type == "EJE" | plan_type == "GP" | plan_type == "HE"))
```

```{r}
#| echo: false
#| warning: false
#| output: false
# generate full document metadata

ca_data <- get_acs(geography='place',
                       state='California',
                       variables = c('B01003_001', #population
                                     'B19013_001', # mhi
                                     'B03001_003', # latino pop
                                     'B02001_003' # black pop
                                     )) %>% 
  filter(!str_detect(NAME, "Burbank CDP|El Cerrito CDP|Greenfield CDP|Live Oak CDP|Mountain View CDP|Rolling Hills CDP"))

census_data <- ca_data %>% 
  mutate(city_name = str_remove(NAME, " (city|CDP), California")) %>% 
  select(-c(NAME, moe, GEOID)) %>%
  pivot_wider(names_from = variable,
              values_from = estimate) %>% 
  rename(population = B01003_001,
         mhi = B19013_001,
         latino_pop = B03001_003,
         black_pop = B02001_003) %>%
  mutate(per_latino = latino_pop / population,
         per_black = black_pop / population)

docvar_df <- docvars(plan_corpus) %>% 
  cbind(docnames(plan_corpus)) %>% 
  select(`docnames(plan_corpus)`, everything()) %>% 
  rename(doc_id = `docnames(plan_corpus)`) %>% 
  left_join(census_data, by = "city_name")  %>% 
  mutate(
    pop_bin = as.factor(cut(population, 
                  breaks = quantile(population, probs = seq(0, 1, length.out = 5), na.rm = TRUE), 
                  include.lowest = TRUE, 
                  labels = FALSE)),
    mhi_bin = as.factor(cut(mhi, 
                  breaks = quantile(mhi, probs = seq(0, 1, length.out = 5), na.rm = TRUE), 
                  include.lowest = TRUE, 
                  labels = FALSE)),
    single_consultant = str_split_i(consultant_name, ';', 1),
    n_consultants = ifelse(is.na(consultant_name),
                           0,
                           str_count(consultant_name, ";") + 1)
  ) %>% 
  tibble()
```

```{r}
#| echo: false
#| warning: false
#| output: false
#| cache: true
# generate tokens and then dfm and then final df

plan_tokens <- tokens(plan_corpus) %>% 
  tokens_tolower() %>%
  tokens(split_hyphens = TRUE,
         remove_punct = TRUE,
         remove_symbols = TRUE,
         remove_numbers = TRUE) 

ej_tokens <- plan_tokens %>% 
  tokens_compound(ej_dictionary, 
                  valuetype = "glob", 
                  case_insensitive = TRUE,
                  join=FALSE) %>% 
  tokens_keep(ej_dictionary,
             valuetype='glob')
  
ej_dfm <- ej_tokens %>% 
  dfm() 

docvars(ej_dfm) <- docvar_df 

ej_dfm_tfidf <- ej_dfm %>% 
  dfm_tfidf() 

ej_sim_df <- tibble(as.data.frame(textstat_simil(ej_dfm_tfidf,  method='cosine'))) %>% 
  left_join(docvar_df, 
            by = c("document1" = "doc_id")) %>% 
  left_join(docvar_df, 
            by = c("document2" = "doc_id")) %>% 
  mutate(same_year = as.factor(ifelse(plan_year.x == plan_year.y, 1, 0)),
         same_pop = as.factor(ifelse(pop_bin.x == pop_bin.y, 1, 0)),
         same_mhi = as.factor(ifelse(mhi_bin.x == mhi_bin.y, 1, 0)),
         both_used_consultant = as.factor(ifelse(consultant_binary.x == 1 & consultant_binary.y == 1, 1, 0)),
         any_shared_consultant = as.factor(
           mapply(function(a, b) {
             if (is.null(a) || is.null(b) || (all(is.na(a)) & all(is.na(b)))) {
               0
               } else {
                 as.integer(length(intersect(a, b)) > 0)
                 }
             }, consultant_list.x, consultant_list.y)),
         n_shared_consultants = mapply(function(a, b) {
           if (
             (is.null(a) || all(is.na(a)) || identical(a, "NA")) &&
             (is.null(b) || all(is.na(b)) || identical(b, "NA"))
             ) {
             0
             } else if (is.null(a) || all(is.na(a)) || identical(a, "NA") ||
                        is.null(b) || all(is.na(b)) || identical(b, "NA")) {
               0
               } else {
                 length(intersect(a, b))
                 }
           }, consultant_list.x, consultant_list.y),
         both_no_consultant = as.factor(ifelse(consultant_binary.x == 0 & consultant_binary.y == 0, 1, 0)),
         same_plan_type = as.factor(ifelse(plan_type.x == plan_type.y, 1, 0)),
         both_eje = as.factor(ifelse(plan_type.x == "EJE" & plan_type.y == "EJE", 1, 0)),
         both_gp = as.factor(ifelse(plan_type.x == "GP" & plan_type.y == "GP", 1, 0)),
         both_he = as.factor(ifelse(plan_type.x == "HE" & plan_type.y == "HE", 1, 0)),
         length_dif = abs(plan_length.x - plan_length.y)
         ) 

```

## SB1000 and General Plans

-   SB1000 (2016): Requires California city general plans to address environmental justice (EJ).
-   General plans structure medium-term planning and include elements like housing, safety, and land use.
-   Cities often hire environmental consultants to support writing these plans.

## What does SB1000 mandate EJ elements address?

::: columns
::: {.column width="50%"}
-   Identifying disadvantaged communities (DACs)
-   Reducing pollution exposure
-   Reducing other health risks
:::

::: {.column width="50%"}
**Promoting in DACs**:

-   Public facilities
-   Food access
-   Safe and sanitary homes
-   Physical activity
-   Civic engagement
:::
:::

# Brief Literature Review

## Policy Diffusion, Transfer, and Mobilities

**Central Question**: Who transfers policies?

-   Consultants play a role
-   Consultants standardize policy language

[@mccann2011; @kirkpatrick2023]

## Environmental Justice and Consultants

-   "There is a danger that consultants offer 'technocratic solutions to political problems'" [@kantola2011]
-   (Critical) EJ scholars are wary of technocratic/neoliberal approaches [@ylönen2019]

**Tension**: How do consultant approaches affect EJ planning, given differing perspectives?

# Hypotheses

## Hypothesis 1

> H1a: Two plans which both utilized the same consultant in the planning process will have an increased cosine similarity compared to other plan-comparisons.

> H1b: Two plans which both did not use a consultant in the planning process will have an decreased cosine similarity compared to other plan-comparisons.

## Hypothesis 2

> H2a: Consultant-written plans will advance EJ goals less than plans written without consultants.

> H2b: Consultants will differentially promote forms of EJ, such that procedural justice is advanced more than distributive justice, which is advanced more than recognitional justice.

## Hypothesis 3

> H3a: Consultant-written plans will use more technical language than plans written without consultants.

> H3b: Consultant-written plans will use less experiential language than plans written without consultants.

## Methods: Preprocessing Steps {.smaller}

1.  **Data Source:**
    -   General Plan Database Mapping Tool (plansearch.caes.ucdavis.edu)
2.  **Document Collection:**
    -   340 documents from 280 cities
    -   Manually downloaded and tagged by type (General Plan, Housing Element, EJ Element)

## Methods: Preprocessing Steps {.smaller}

3.  **Dictionary Creation:**
    -   Based on 8 topics in statutory EJ requirements
    -   Guided by CA OPR guidelines vocabulary
    -   Identified 353 EJ-related tokens
        -   (can be multi-word, non-mutually exclusive)
4.  **TF-IDF Weighting:**
    -   Transforms term frequency to relative frequency.
    -   These documents talk about a lot of things, EJ makes up only a portion
    -   Terms that are rare are more interesting (and probably more EJ related)
    -   Accounts for varying document lengths

## Hypothesis 1a

Two plans which both utilized the same consultant in the planning process will have an increased cosine similarity compared to other plan-comparisons.

```{r}
#| fig-cap: "Similarity for Shared Consultant Use"
#| echo: false
#| results: asis

library(sjPlot)


mod_1a <- betareg(cosine ~  any_shared_consultant + same_year + same_pop + same_mhi + both_eje + both_gp + both_he,
                 link='logit',
                 data = ej_sim_df) 

mod_1b <- betareg(cosine ~  both_no_consultant + same_year + same_pop + same_mhi + both_eje + both_gp + both_he,
                 link='logit',
                 data = ej_sim_df) 

mod_2a <- betareg(cosine ~ same_year + same_pop + same_mhi + both_eje + any_shared_consultant*both_gp + any_shared_consultant*both_he,
                 link='logit',
                 data = ej_sim_df) 

mod_2b <- betareg(cosine ~ same_year + same_pop + same_mhi + both_no_consultant*both_eje + both_no_consultant*both_gp + both_no_consultant*both_he,
                 link='logit',
                 data = ej_sim_df) 

sjPlot::plot_models(mod_1a, mod_2a,
                    rm.terms = c("same_year1", "same_pop1", "same_mhi1"),
                    m.labels = c("No Interaction", "Interaction"))
```

## Hypothesis 1b

Two plans which both did not use a consultant in the planning process will have an decreased cosine similarity compared to other plan-comparisons.

```{r}
#| fig-cap: "Similarity for No Consultant Use"
sjPlot::plot_models(mod_1b, mod_2b,
                    rm.terms = c("same_year1", "same_pop1", "same_mhi1"),
                    m.labels = c("No Interaction", "Interaction"))

```

## Hypothesis 2a 

Consultant-written plans will advance EJ goals less than plans written without consultants.

```{r}
#| fig-cap: "EJ Themes used more by Consultants and Non-Consultants"
#| echo: false
#| warning: false
#| results: asis


ej_dfm_dict <- ej_dfm %>% 
  dfm_lookup(ej_dictionary, 
             valuetype = "glob", 
             case_insensitive = TRUE) 

noncon_agg <- textstat_frequency(ej_dfm_dict,
                    groups=consultant_binary,
                    force=TRUE) %>% 
  filter(group==0) %>%
  mutate(freq_std = frequency/docfreq) %>% 
  tibble()

con_agg <- textstat_frequency(ej_dfm_dict,
                    groups=consultant_binary,
                    force=TRUE) %>% 
  filter(group==1) %>%
  mutate(freq_std = frequency/docfreq) %>% 
  tibble()

inner_join(noncon_agg, con_agg, by = "feature", suffix = c(".noncon", ".con")) %>%
  select(feature, freq_std.noncon, freq_std.con) %>%
  pivot_longer(
    cols = starts_with("freq_std"),
    names_to = "Group",
    values_to = "freq_std"
  ) %>%
  mutate(Group = recode(Group,
                       "freq_std.noncon" = "Consultant Not Used",
                       "freq_std.con" = "Consultant Used")) %>%
  ggplot(aes(x = reorder(feature, freq_std), y = freq_std, fill = Group)) +
  geom_col(position = "dodge") +
  scale_fill_manual(values = c("Consultant Used" = "#1f77b4", "Consultant Not Used" = "#ff7f0e")) +
  coord_flip() +
  labs(x = "Term", y = "Relative Frequency", fill = "Group") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

```

## Hypothesis 2b

Consultants will differentially promote forms of EJ, such that procedural justice is advanced more than distributive justice, which is advanced more than recognitional justice.

```{r}
#| echo: false
#| warning: false
#| results: asis

ej_freq_df <- convert(ej_dfm_dict, 'data.frame') %>% 
  mutate(across(where(is.numeric), round, digits = 0)) %>%
  left_join(docvar_df, by = "doc_id") %>% 
  tibble() %>% 
  mutate(rec_jus = identifying_disadvantaged_communities,
         proc_jus = promoting_civic_engagement,
         dis_jus = reducing_pollution_exposure_air_quality + 
           promoting_public_facilities + 
           promoting_safe_sanitary_homes + 
           promoting_physical_activity + 
           reducing_unique_compounded_health_risks,
         ej = rec_jus + proc_jus + dis_jus,
         mhi1000 = mhi / 1000,
         pop1000 = population / 1000,
         consultant_binary = as.factor(consultant_binary))

rec_mod <- glm(rec_jus ~ plan_type-1 + plan_year + pop1000 + per_latino + per_black + mhi1000 + plan_length + consultant_binary,
     data = ej_freq_df,
     family = 'poisson')

proc_mod <- glm(proc_jus ~  plan_type-1 + plan_year + pop1000 + per_latino + per_black + mhi1000 + plan_length + consultant_binary,
     data = ej_freq_df,
     family = 'poisson')

dis_mod <- glm(dis_jus ~  plan_type-1 + plan_year + pop1000 + per_latino + per_black + mhi1000 + plan_length + consultant_binary ,
     data = ej_freq_df,
     family = 'poisson')

plot_models(rec_mod, proc_mod, dis_mod,
            rm.terms = c("plan_type [EJE, GP, HE]", 
                         "plan_year", 
                         'pop1000', 
                         'mhi1000', 
                         'plan_length'),
            m.labels = c("Recognitional Justice", 
                         "Procedural Justice", 
                         "Distributive Justice"),
            axis.labels = c('Consultant Use', 
                            'Percent Black', 
                            'Percent Latino')
            )


```

## Hypothesis 3

Consultant-written plans will use **more technical language** than plans written without consultants and **less experiential language** than plans written without consultants.

```{r}
#| label: fig-words-only-used
#| fig-cap: "EJ Terms Used Only by Consultants or Non-Consultants"
#| echo: false
#| warning: false

# words only used by consultants and non-consultants

noncon_words <- textstat_frequency(ej_dfm_tfidf,
                    groups=consultant_binary,
                    force=TRUE) %>% 
  filter(group==0) %>%
  # filter(frequency > 10) %>% 
  filter(docfreq > 5) %>%
  mutate(freq_std = frequency/docfreq,
         group='Non-Consultants') %>% 
  tibble()

con_words <- textstat_frequency(ej_dfm_tfidf,
                    groups=consultant_binary,
                    force=TRUE) %>% 
  filter(group==1) %>%
  # filter(frequency > 10) %>%
  filter(docfreq > 12) %>%
  mutate(freq_std = frequency/docfreq,
         group = 'Consultants') %>% 
  tibble()

con_only_words <- con_words %>% 
  anti_join(noncon_words, by = "feature") %>% 
  arrange(desc(freq_std)) %>% 
  mutate(index=seq(1, nrow(.)))

max(con_only_words$index) -> start_at

noncon_only_words <- noncon_words %>%
  anti_join(con_words, by = "feature") %>% 
  arrange(freq_std) %>% 
  mutate(index=seq(start_at+1, start_at+nrow(.)))

rbind(con_only_words, noncon_only_words) %>% 
  rename(`Used Only By` = group) %>% 
  ggplot(aes(x = reorder(feature, desc(index)), y = freq_std)) +
  geom_col(aes(fill=`Used Only By`)) +
  scale_fill_manual(values = c("Consultants" = "#1f77b4", 
                               "Non-Consultants" = "#ff7f0e")) +
  coord_flip() +
  labs(x = "Term", y = "Relative Frequency") +
  theme_minimal()

```

:::{.notes}
Consultant Only

    - health aspects (high blood pressure and chronic disease)
    - food aspects (food deserts, food systems, and fresh fruits)
    - transportation system changes (accessible transit, walkable community, active transporation infrastructure and programs). 

Non-Consultant Only

    - minority-led governance (racial minorities, tribal government, community centered)
    - specific environmental threats (wildfire threat, water contaminant, lead exposure). 

The consultant-only terms are often somewhat more bloodless and latent, systemic, or otherwise ethereal compared to the non-consultant-only terms.
:::

## Hypothesis 3

Consultant-written plans will use **more technical language** than plans written without consultants and **less experiential language** than plans written without consultants.

```{r}
#| label: fig-words-used
#| fig-cap: "EJ Terms used more by Consultants and Non-Consultants"
#| echo: false
#| results: asis

words_used <- inner_join(noncon_words, con_words, by = "feature") %>% 
  mutate(diff = freq_std.y-freq_std.x) %>% 
  arrange(diff) %>% 
  select(feature, freq_std.x, freq_std.y, diff) 

words_h20 <- words_used %>% 
  head(20)

words_t20 <- words_used %>% 
  tail(20)

rbind(words_h20, words_t20) %>% 
  mutate(`Used More By` = ifelse(diff > 0, "Consultants", "Non-Consultants")) %>%
  ggplot(aes(x = reorder(feature, diff), y = diff)) +
  geom_col(aes(fill=`Used More By`)) +
  scale_fill_manual(values = c("Consultants" = "#1f77b4", 
                               "Non-Consultants" = "#ff7f0e")) +
  coord_flip() +
  labs(x = "Term", y = "Difference in Relative Frequency") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
```


:::{.notes}
Consultant
    
    - high-level ideas about combating or dealing with climate change (adaptation, resilience, and green infrastructure), 

Non-Consultant 
    
    - lived experience of climate change (cooling centers, extreme heat and hospitalization) 
    - causes of it (greenhouse gas emission and fossil fuel combustion). 

Non-Consultant
    
    - air quality (air quality monitoring, AQMD, mobile sources, fossil fuel combustion), 

Consultant has "reducing pollution"
:::

## Why the Difference? {.smaller}

1.  **Actual Compliance/Greater Discussion:** 

Plans by consultants discuss EJ topics at a greater rate or use EJ-related terms more.
    
2.  **Drawing on State-Approved Vocabulary:**
 - EJ term list for analysis was drawn from state-level guidelines.
 - Consultants may more heavily use state-approved EJ words/phrases.
 - Non-consultant plans might not address EJ less, but *differently*, using vocabulary not explicitly from state recommendations.

