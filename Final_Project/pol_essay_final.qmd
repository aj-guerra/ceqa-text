---
title: "The Effects of Consultant Use on Environmental Justice Planning"
author: "Aaron Guerra"
format: pdf
fontsize: 12pt
linestretch: 1.2
classoption: oneside
geometry: margin=1in
mainfont: Times New Roman
sansfont: Times New Roman
number-sections: false
pagestyle: plain
bibliography: references.bib
suppress-bibliography: false
---

```{r}
#| echo: false
#| output: false
library(tidyverse)
library(quanteda)
library(quanteda.textstats)
library(topicmodels)
library(tidytext)
library(tidycensus)
library(stargazer)

ej_dictionary <- dictionary(list(
  identifying_disadvantaged_communities = c(
    "disadvantaged communit*", "disproprtionat* affect*",
    "pollution* burden*", "pollution*",
    "hazard*", "health effect*",
    "exposure*", "environmental degradation*",
    "CalEnviroScreen", "pollution burden*", "census tract*", "screen*", "community-specific data",
    "vulnera*", 
    "household income*","median income", "MHI", "income limit*", 
    "health risk factor*", "environmental burden*", 
    "health risk*", "community needs",
    "historical trend*", "gentrification", "displacement*", 
    "fringe communit*", "unincorporated communit*", 
    "equit*", "inequit*", 
    "low-income area*", "low-income population*", "sensitive population*",
    "minority population*",
    "racial minorit*", "communit* of color", 
    "tribal government*", "tribal culture*", 
    "environmental racism", "redlining", "disinvestment*", "segregat*", "systemic oppression"
  ),
  reducing_pollution_exposure_air_quality = c(
    "pollut*", "pollution exposure*", "reduce exposure*", "reduc* pollut*",
    "unique health risk*", "compounded health risk*", "health hazard*", 
    "air qualit*", 
    "mobile source*", "stationary source*", 
    "emission*", 
    "fossil fuel combustion",
    "vehicle miles traveled", "VMT", "mode shift", "active transportation", "zero-emission", "electric fleet*", 
    "sensitive land use*", 
    "high-volume roadway*", "major arterial*", "freeway*", "truck route*",
    "freight-handling facilit*", "manufacturing facilit*", "industrial air pollution*", 
    "mitigation procedure*", "mitigation*", "low-carbon technolog*", 
    "zero-emission vehicle*", "ZEV", 
    "solar generation", "wind generation", 
    "indoor filtration system*", "polluting substance*", "water qualit*", "soil pollution*",
    "noise",
    "asthma", "birth defect*", "cancer*", "heart disease*", "neurologic disorder*", "reproductive disorder*", 
    "involuntary exposure*", "second-hand smoke", "third-hand smoke", "tobacco smoke", "smoke-free zone*","tobacco outlet*",
    "pesticide*", "integrated pest management", "regenerative agriculture",
    "air quality management district*", "aqmd", "carb", "california air resources board", 
    "community air protection program*", "ab 617", "community emissions reduction program*",
    "air quality monitoring", "emissions control limit*", "emissions data", 
    "toxic hot spot*",
    "transitional land use*", "industrial facilit*", 
    "hazardous facilit*", "hazardous waste", "solid waste site*", "brownfield development",
    "remediation", "cleanup", 
    "near-roadway siting",
    "diesel PM", "toxic air contaminant*", "ozone", "pm 2.5",
    "groundwater threat*", "water contaminant", 
    "impaired water bod*", "toxic cleanup site*", 
    "traffic densit*"
  ),
  promoting_public_facilities = c(
    "public facilit*", "public improvement*", "public service*",
    "community center*", "librar*", "public transit", "park*", "recreation facilit*",
    "safe drinking water", "wastewater service*", 
    "active transportation infrastructure","flood control", "water drainage", 
    "health care service*", "hospital*", "health clinic*",
    "broadband access", "internet access", 
    "disaster preparedness", "recovery capacit*",
    "amenit*", "park*", "trail*", "sidewalk*", "public transit"
  ),
  promoting_food_access = c(
    "food access", "healthy food*", "affordable food*", "food desert*",
    "food insecur*", "nutrition", "obesit*", 
    "food choice*", "food system*",
    "grocery store*", "farmer* market*", 
    "community garden*", "urban farm*", "convenience store*",
    "fresh produce", "food procurement polic*", 
    "food production", "food distribution", "food processing", "food consumption", 
    "waste disposal", 
    "locally grown food*", "farm to market",
    "CalFresh", 
    "food recovery program*", "SB 1383", 
    "fresh fruit*", "fresh vegetable*",
    "self-reported food insecurit*"
  ),
  promoting_safe_sanitary_homes = c(
    "safe home*", "sanitary home*", "promot* safe and sanitary home*", 
    "housing location*", "housing qualit*", "housing affordabilit*", "housing stabilit*",
    "lower income household*", "special needs household*", 
    "Regional Housing Need Allocation", "RHNA",
    "fair share planning", 
    "accessible transit", 
    "pest infestation", "water intrusion", "mold", "poor insulation",
    "exposure to toxin*", "lead exposure", "lead based paint",
    "second-hand smoke", "third-hand smoke",
    "weatherize home*", "modernize home*",
    "green building practice*", "sustainable building practice*", 
    "new housing construction", "major retrofit*", 
    "affordable housing", "unstable living condition*", "housing price*", 
    "household occupancy rate*", "overcrowded living condition*",
    "rising rent*", "displacement*","marginally housed", "homelessness", 
    "renter protection",
    "preserving affordable housing", "housing cost burden", "homelessness data",
    "household characteristic*"
  ),
  promoting_physical_activity = c(
    "physical activit*", "physical inactivit*", 
    "chronic disease*",
    "obesit*", "diabetes", "high blood pressure", "high cholesterol", "heart disease*",
    "mental health", "well-being",
    "park*", "recreation", "open space", "recreational facilit*",
    "park poor", "park improvement*", 
    "no smoking polic*", 
    "joint use agreement*", "shared use agreement*",
    "active transportation", 
    "walking", "biking", "daily routine*", "perform errand*",
    "walking to work", "biking to work", "walking to school", "biking to school",
    "active design guideline*",
    "connected bike route*", "pedestrian on-street route*", 
    "infill development", "Complete Street*",
    "multimodal transit", "interconnected transit", 
    "first mile polic*", "last mile polic*",
    "covered rest area*", "shade", "age friendly seating", "bike storage", "trail network*",
    "Sustainable Communities and Climate Protection Act", "SB 375",
    "Active Transportation Program", "Safe Routes to School", "SRTS", 
    "safety of route*", "aging in place",
    "naturally occurring retirement communit*", "NORC",
    "walkable communit*",
    "park access", "unintentional injur* involving pedestrian*",
    "crash data", "walk trip* per capita", "bike trip* per capita",
    "children who walk* to school", "children who bike* to school", "children who roll* to school",
    "walk map*", "bike map*",
    "perception of safet*"
  ),
  reducing_unique_compounded_health_risks = c(
    "unique health risk*", "compounded health risk*",
    "reduce health risk*", 
    "climate change", "climate vulnerabilit*", "climate adaptation", 
    "adaptation", "resilience", "resiliency",
    "flooding", "drought", "wildfire*", "extreme heat", 
    "greenhouse gas emission*", "GHG", "vulnerable communit*",
    "temperature record*", "heat stroke", "heat-related complication*", "heat island*", "cooling center*",
    "green infrastructure", "urban forestry", "urban greening", "cool surface*", "cool roof*",
    "green roof*", "tree canop*", 
    "carbon capture", 
    "energy efficienc*",
    "drought mitigation", "stagnant water", "mosquito reproduction", "insect-borne disease*",
    "dengue", "yellow fever", 
    "sea level rise", 
    "fire hazard severity zone*", "FHSZ",
    "precipitation change*", "snowpack loss", "extreme precipitation event*",
    "extended drought scenario*", "wildfire threat*", "air conditioning access"
  ),
  promoting_civic_engagement = c(
    "civic engagement", 
    "public decision-making process*", "public participation",
    "community engagement", "community vision*", 
    "local histor*", "relationship*", "trust", "rebuild trust",
    "community-based organization*", "CBO*", 
    "advocacy group*", 
    "trusted leader*",
    "barrier* to participation", "time conflict*",
    "meeting format*", "planning process*", "ongoing engagement",
    "general plan implementation", 
    "local neighborhood-level specific plan*", 
    "revitalization effort*", 
    "community-facing program*", 
    "community input", "community buy-in", "community support",
    "stakeholder communit*", "community advisory committee"
  )
  ))

plan_corpus <- readRDS("plans_corpus_doc.rds")

plan_metadata <- read_csv('../plans_metadata.csv') %>% 
  mutate(consultant_list = str_split(consultant_name, pattern = ";\\s*"))

docvars(plan_corpus) <- plan_metadata

# ej_corpus <- corpus_subset(plans_corpus_doc, 
#                            plan_type == "EJE")

ca_data <- get_acs(geography='place',
                       state='California',
                       variables = c('B01003_001', #population
                                     'B19013_001' # mhi
                                     )) %>% 
  filter(!str_detect(NAME, "Burbank CDP|El Cerrito CDP|Greenfield CDP|Live Oak CDP|Mountain View CDP|Rolling Hills CDP"))

census_data <- ca_data %>% 
  mutate(city_name = str_remove(NAME, " (city|CDP), California")) %>% 
  select(-c(NAME, moe, GEOID)) %>%
  pivot_wider(names_from = variable,
              values_from = estimate) %>% 
  rename(population = B01003_001,
         mhi = B19013_001) 

docvar_df <- docvars(plan_corpus) %>% 
  cbind(docnames(plan_corpus)) %>% 
  select(`docnames(plan_corpus)`, everything()) %>% 
  rename(doc_id = `docnames(plan_corpus)`) %>% 
  left_join(census_data, by = "city_name")  %>% 
  mutate(
    pop_bin = as.factor(cut(population, 
                  breaks = quantile(population, probs = seq(0, 1, length.out = 5), na.rm = TRUE), 
                  include.lowest = TRUE, 
                  labels = FALSE)),
    mhi_bin = as.factor(cut(mhi, 
                  breaks = quantile(mhi, probs = seq(0, 1, length.out = 5), na.rm = TRUE), 
                  include.lowest = TRUE, 
                  labels = FALSE)),
    single_consultant = str_split_i(consultant_name, ';', 1),
  ) %>% 
  tibble()

cities <- tolower(unlist(str_split(as.character(docvars(plan_corpus)$city_name), ' ')))
counties <- tolower(unlist(str_split(c(
  "ALAMEDA", "ALPINE", "AMADOR", "BUTTE", "CALAVERAS", "COLUSA", "CONTRA COSTA",
  "DEL NORTE", "EL DORADO", "FRESNO", "GLENN", "HUMBOLDT", "IMPERIAL", "INYO",
  "KERN", "KINGS", "LAKE", "LASSEN", "LOS ANGELES", "MADERA", "MARIN", "MARIPOSA",
  "MENDOCINO", "MERCED", "MODOC", "MONO", "MONTEREY", "NAPA", "ORANGE", "PLACER",
  "PLUMAS", "RIVERSIDE", "SACRAMENTO", "SAN BENITO", "SAN BERNARDINO", "SAN DIEGO",
  "SAN FRANCISCO", "SAN JOAQUIN", "SAN LUIS OBISPO", "SAN MATEO", "SANTA BARBARA",
  "SANTA CLARA", "SANTA CRUZ", "SHASTA", "SIERRA", "SISKIYOU", "SOLANO", "SONOMA",
  "STANISLAUS", "SUTTER", "TEHAMA", "TRINITY", "TULARE", "TUOLUMNE", "VENTURA",
  "YOLO", "YUBA", "NEVADA"
), ' ')))

place_names_remove <- c(cities, 
                        str_c(cities, "’s"), 
                        counties)

two_letters <- c()
for (letter in letters) {
  two_letters <- c(two_letters, str_c(letters, letter))
  }

plan_tokens <- tokens(plan_corpus) %>% 
  tokens_tolower() %>%
  tokens_compound(ej_dictionary, 
                  valuetype = "glob", 
                  case_insensitive = TRUE) %>%
  tokens_remove(place_names_remove) %>%
  tokens_remove(stopwords("en")) %>%
  tokens_remove(c('st', 'ave', 'rd', 'blvd'))%>%
  tokens(split_hyphens = TRUE,
         remove_punct = TRUE,
         remove_symbols = TRUE,
         remove_numbers = TRUE) %>%
  tokens_remove(letters) %>% 
  tokens_remove(two_letters) 

plan_dfm <- plan_tokens %>% 
  dfm() %>% 
  dfm_tfidf() %>%
  dfm_trim(min_docfreq = 20,
           docfreq_type = "count") %>%
  dfm_subset(plan_type == "EJE" | plan_type == "GP" | plan_type == "HE")

ej_dfm <- plan_tokens %>% 
  dfm() %>% 
  # dfm_tfidf() %>% 
  dfm_keep(ej_dictionary) %>% 
  dfm_subset(plan_type == "EJE" | plan_type == "GP" | plan_type == "HE")

ej_dfm_tfidf <- ej_dfm %>% 
  dfm_tfidf() 

ej_dfm_dict <- ej_dfm %>% 
  dfm_lookup(ej_dictionary, 
             valuetype = "glob", 
             case_insensitive = TRUE) %>%
  dfm_group(group = plan_type,
            force = TRUE)

docvars(plan_dfm) <- docvar_df %>% filter(plan_type == "EJE" | plan_type == "GP" | plan_type == "HE" )

plan_dfm <- plan_dfm[rowSums(plan_dfm) > 0, ] 

docvars(ej_dfm) <- docvar_df %>% filter(plan_type == "EJE" | plan_type == "GP" | plan_type == "HE" )

ej_dfm <- ej_dfm[rowSums(ej_dfm) > 0, ]

freq_tfidf <- textstat_frequency(ej_dfm_tfidf, 
                   force=TRUE) %>%
  tibble(); freq_tfidf

freq_by_main_consultant <- textstat_frequency(ej_dfm,
                   force=TRUE,
                   groups=single_consultant) %>%
  tibble() %>%
  group_by(group) %>%
  slice_max(order_by = frequency, n = 10) ; freq_by_main_consultant

# ej_dfm %>%
#   textstat_frequency(groups=county, force=TRUE) %>%
#   group_by(group) %>%
#   slice_max(order_by = frequency, n = 5) %>%
  # arrange(group, desc(frequency))
# 
# ej_dfm %>% 
#   textstat_frequency(groups=used_consultant, force=TRUE) %>% 
#   group_by(group) %>% 
#   slice_max(order_by = frequency, n = 20) %>% 
#   arrange(group, desc(frequency))


plan_sim_df <- tibble(as.data.frame(textstat_simil(plan_dfm,  method='cosine'))) %>% 
  left_join(docvar_df, 
            by = c("document1" = "doc_id")) %>% 
  left_join(docvar_df, 
            by = c("document2" = "doc_id")) %>% 
  mutate(same_year = as.factor(ifelse(plan_year.x == plan_year.y, 1, 0)),
         same_pop = as.factor(ifelse(pop_bin.x == pop_bin.y, 1, 0)),
         same_mhi = as.factor(ifelse(mhi_bin.x == mhi_bin.y, 1, 0)),
         both_used_consultant = as.factor(ifelse(consultant_binary.x == 1 & consultant_binary.y == 1, 1, 0)),
         # same_consultant1 = ifelse(consultant_name.x == consultant_name.y, 1, 0),
         # same_consultant = as.factor(ifelse(is.na(same_consultant1), 0, same_consultant1)),
         any_shared_consultant = as.factor(
           mapply(function(a, b) {
             if (is.null(a) || is.null(b) || (all(is.na(a)) & all(is.na(b)))) {
               0
               } else {
                 as.integer(length(intersect(a, b)) > 0)
                 }
             }, consultant_list.x, consultant_list.y)),
         n_shared_consultants = mapply(function(a, b) {
           if (
             (is.null(a) || all(is.na(a)) || identical(a, "NA")) &&
             (is.null(b) || all(is.na(b)) || identical(b, "NA"))
             ) {
             0
             } else if (is.null(a) || all(is.na(a)) || identical(a, "NA") ||
                        is.null(b) || all(is.na(b)) || identical(b, "NA")) {
               0
               } else {
                 length(intersect(a, b))
                 }
           }, consultant_list.x, consultant_list.y),
         same_plan_type = as.factor(ifelse(plan_type.x == plan_type.y, 1, 0)),
         both_eje = as.factor(ifelse(plan_type.x == "EJE" & plan_type.y == "EJE", 1, 0)),
         both_gp = as.factor(ifelse(plan_type.x == "GP" & plan_type.y == "GP", 1, 0)),
         both_he = as.factor(ifelse(plan_type.x == "HE" & plan_type.y == "HE", 1, 0)),
         length_dif = abs(plan_length.x - plan_length.y)
         ) 



ej_sim_df <- tibble(as.data.frame(textstat_simil(ej_dfm_tfidf,  method='cosine'))) %>% 
  left_join(docvar_df, 
            by = c("document1" = "doc_id")) %>% 
  left_join(docvar_df, 
            by = c("document2" = "doc_id")) %>% 
  mutate(same_year = as.factor(ifelse(plan_year.x == plan_year.y, 1, 0)),
         same_pop = as.factor(ifelse(pop_bin.x == pop_bin.y, 1, 0)),
         same_mhi = as.factor(ifelse(mhi_bin.x == mhi_bin.y, 1, 0)),
         both_used_consultant = as.factor(ifelse(consultant_binary.x == 1 & consultant_binary.y == 1, 1, 0)),
         # same_consultant1 = ifelse(consultant_name.x == consultant_name.y, 1, 0),
         # same_consultant = as.factor(ifelse(is.na(same_consultant1), 0, same_consultant1)),
         any_shared_consultant = as.factor(
           mapply(function(a, b) {
             if (is.null(a) || is.null(b) || (all(is.na(a)) & all(is.na(b)))) {
               0
               } else {
                 as.integer(length(intersect(a, b)) > 0)
                 }
             }, consultant_list.x, consultant_list.y)),
         n_shared_consultants = mapply(function(a, b) {
           if (
             (is.null(a) || all(is.na(a)) || identical(a, "NA")) &&
             (is.null(b) || all(is.na(b)) || identical(b, "NA"))
             ) {
             0
             } else if (is.null(a) || all(is.na(a)) || identical(a, "NA") ||
                        is.null(b) || all(is.na(b)) || identical(b, "NA")) {
               0
               } else {
                 length(intersect(a, b))
                 }
           }, consultant_list.x, consultant_list.y),
         same_plan_type = as.factor(ifelse(plan_type.x == plan_type.y, 1, 0)),
         both_eje = as.factor(ifelse(plan_type.x == "EJE" & plan_type.y == "EJE", 1, 0)),
         both_gp = as.factor(ifelse(plan_type.x == "GP" & plan_type.y == "GP", 1, 0)),
         both_he = as.factor(ifelse(plan_type.x == "HE" & plan_type.y == "HE", 1, 0)),
         length_dif = abs(plan_length.x - plan_length.y)
         ) 

# mod_1 <- lm(log(cosine) ~ any_shared_consultant + same_year + same_pop + same_mhi,
#             data = ej_sim_df)

mod_2 <- glm(cosine ~  any_shared_consultant + same_year + both_eje + both_gp + both_he,
             family=quasibinomial(),
            data = ej_sim_df) 

mod_3 <- glm(cosine ~  same_year + both_eje*any_shared_consultant + both_gp*any_shared_consultant + both_he*any_shared_consultant ,
             family=quasibinomial(),
            data = ej_sim_df) 

mod_5 <- glm(cosine ~  same_year + both_eje*n_shared_consultants + both_gp*n_shared_consultants + both_he*n_shared_consultants + same_pop + same_mhi,
             family=quasibinomial(),
            data = ej_sim_df) 

stargazer( mod_2, mod_3, mod_5, 
          type='text',
          header=FALSE)


mod_a <- lm(log(cosine) ~  n_shared_consultants + same_year + both_eje + both_gp + both_he,
            data = plan_sim_df) 

mod_b <- lm(log(cosine) ~  same_year + both_eje*n_shared_consultants + both_gp*n_shared_consultants + both_he*n_shared_consultants ,
            data = plan_sim_df) 

mod_c <- lm(log(cosine) ~  same_year + both_eje*n_shared_consultants + both_gp*n_shared_consultants + both_he*n_shared_consultants + same_pop + same_mhi,
            data = plan_sim_df) 

stargazer(mod_a, mod_b, mod_c, 
          type='text',
          header=FALSE)

consultants <- unique(unlist(docvar_df$consultant_list))


```

# Introduction

In 2016, the state of California passed Senate Bill 1000, which required that city general plans address environmental justice (EJ). A general plan lays out the status quo and goals of a city, and is composed of different elements, including the housing element (the only element requiring state approval), safety element, land use element, and others. In implementing EJ, cities are given the option between a standalone EJ element or incorporating this material across the general plan. Previous research suggests that the implementation of EJ into plans varies greatly and that further research should seek to explain "the context in which plans were made \[...\], including the use of consultants" [@brinkley2024, pp. 68]. This article intends to do just that, by questioning what effect the use of consulting firms has on the similarity between environmental justice elements. A greater understanding of how consultants impact the policy development process can have normative implications for the policies that are developed in the EJ context, which prioritizes localized, participatory development over centralized or standardized approaches. Further, consultants are frequently used in the environmental policy process, particularly in the environmental review process, and results may indicate further avenues of research.

Here, I focus on a single hypothesis regarding the use of consultants. Previous research on boilerplate text has indicated that documents sharing consulting firms have increased use of boilerplate text [@scott2022]. Further, the use of consultants is often intended to reduce friction in the review process through normalized and standardized processes [@kingsley2017]. However, the role that consultants play in the environmental policy proces, particulalry in the development of substantive local policy, is still not well understood [@scott2019; @marciano2023]. As such, I hypothesize that two documents which use the consulting firm will have increased similarity in their discussion of environmental justice than two firms which do not.

# Methods

The General Plan Database Mapping Tool was used to conduct this analysis (plansearch.caes.ucdavis.edu). This database was constructed through manual compilation of relevant general plan documents across California cities, and is primarily used as a website which allows users to search for a term across all plans available in the database [@banginwar2023; @poirier2024]. The database has been updated several times since its initial use in a 2017 article. Documents were manually downloaded from the website and totaled 361 unique documents at the time of download, covering 288 unique cities.

Documents were transformed from the pdf format to text corpuses using the `pdftools` and `quanteda` packages in R. Whitespace characters such as newline (`\n`) were removed but documents were otherwise unaltered. After an initial review of documents it was necessary to tag the specific type of general plan document for each, as the dataset included general plans, housing elements, and environmental justice elements, with a small number of other elements. Each document type was manually coded by the author. In order to make comparisons between a sufficiently large sample, the analysis was restricted to only these three kinds of documents, which make up 95% of the dataset[^1].

[^1]: Seven safety elements and five land use elements were dropped, along with six other elements which appeared once each.

Several processing steps were taken for each document, the most important being the selection of terms within a manually-created dictionary. There are statutory requirements for EJ elements to cover eight different topics: identifying disadvantaged communities (DACs), policies to reduce exposure to pollution, to promote public facilities, food access, safe and sanitary homes, physical activity, civic engagement in the public decision-making process, and reduce other health risks in disadvantaged communities [@governorsofficeofplanningandresearch2020]. In the guidelines for these requirements, the Office of Planning and Research highlights a wide variety of related ideas and avenues for implementation for each. The vocabularly used in this document guided the formation of the environmental justice dictionary used to reduce the features of the corpuses. Of the more than 19 million tokens across the corpuses, the author identified 353 which specifically related to one of the eight EJ topics. These selections were not mutually exclusive - for example, the term obesity appears in both food access and physical activity policy topics. These tokens could also be multi-word phrases. The terms included in the dictionary were inspected in-context to ensure that, generally, their discussion was linked to the EJ topic to which they were assigned.

This is likely due to another pre-processing choice: the weighting of a document feature matrix (DFM) with term frequency - inverse document frequency (TF-IDF) values.

TF-IDF values weight the features (or terms) in a DFM based on their document-level frequency and corpus-level frequency, such that terms which are uniquely frequent in few documents are more heavily weighted than terms which are frequent across all or many documents. As such, this weighting procedure transforms the frequency of a term into the relative frequency of a term. This procedure was selected for this analysis due to the expectation that there would be significant similarity between documents as they are intended to be similar. TF-IDF weighting provides a consistent and understandable method of controlling for this expectation. Finally, any terms which only appear in one document are removed, as the nature of comparison between two documents would be biased by terms which appear in one document but not the other.

## Dependent Variable

The dependent variable in this analysis is the similarity between two documents.

Given the resultant DFM, cosine similarity was calculated between each pair of documents, for a total of 78 pairwise comparisons. Cosine similarity measures the cosine between two vectors in a high-dimensional space, where each vector is equal in length to the number of features in a DFM. Higher normalized cosine measurements indicate higher similarity between documents.

## Independent Variables

The primary independent variable of analysis is the use of consultants on a given EJ element. This was developed through a manual content analysis by the author. Use of consultant was defined as an explicit reference within the document typically labeled using the phrase "Document prepared by" or the prominent display of a consulting firm logo. The actual consulting firm was recorded but as no two EJ elements shared the same firm, the independent variable is operationalized as two elements both having used a consultant.

Two sets of controls were used for this analysis. First, the thirteen plans are distributed across eight counties, meaning that several of the plans exist in the same county - there are five in Los Angeles county and two in Riverside county. As such, the county within which a city is bounded is included in some models. Similarly, the plans in this dataset were developed between 2021 and 2024, and the year of plan development is included in some models. Second, two socioeconomic variables were gathered from the 2020 American Community Survey, measuring the population and median household income (MHI) of the cities measured. These were collected from the Census API using the `tidycensus` R package. For means of comparing population and MHI, these variables were binned into two groups about the median, thereby measuring if a community is relatively large or small and poor or wealthy.

# Results and Discussion

Given the nature of the data, this analysis uses ordinary least squares regression (OLS). Initial inspection suggests that non-normal distribution of error terms is remedied by transforming the dependent variable into its natural logarithm. Four models are run: the first with only consultant use, the second with consultant use controlling for plan-level variables, the third with consultant use controlling for socioecnomic variables, and the fourth with all controls. The results of this regression analysis are presented in Table 1.

```{r }
#| echo: false
#| results: asis

stargazer(mod_1, mod_2, mod_3, mod_4, 
          type='latex',
          title='Predictors of Logged Cosine Similarity',
          covariate.labels = c(
            'Consultant Used',
            'Same County',
            'Same Year',
            'Same Population Bin',
            'Same MHI Bin'
          ),
          column.sep.width='0pt',
          font.size='small',
          header=FALSE)
```

In each of the four models, there is evidence that the use of consultants in the development of an EJ element is correlated with increased cosine similarity. This effect remains mostly unaffected by the inclusion of further controls, none of which significantly influence the cosine similarity. However, there is also reason to be skeptical about the models including controls, as the associated F statistic is not significant. Combined with the lack of significance for any of the control variables, the simplest first model is perhaps the most reliable. Taking the coefficient from that model, these results suggest that when two EJ elements both use a consultant in their development, the similarity between them increases by 43.6%.

Given these results, one may wonder what is different about the documents produced with a consultant compared to those which were produced without. One approach to understanding these differences is through the frequency with which terms appear in the two groups. Recall that term counts have been weighted using TF-IDF scores, such that the most frequent terms are better interpreted as the most relatively frequent term (in that document). @fig-frequency shows the most common twenty words in each group, highlighting those which appear in both.

```{r}
#| label: fig-frequency
#| fig-cap: "Weighted Term Frequency in Environmental Justice Elements"
#| echo: false
#| results: asis

freqs <- ej_dfm %>%
  textstat_frequency(groups=used_consultant, force=TRUE) %>%
  group_by(group) %>%
  slice_max(order_by = frequency, n = 30) %>%
  arrange(group, desc(frequency)) %>% 
  mutate(group = ifelse(group == 1, "Used Consultant", "Did Not Use Consultant")) %>% 
  ungroup()

appear_in_both <- count(freqs, feature) %>% 
  filter(n>1) %>% 
  pull(feature)

freqs <- freqs %>% 
  mutate(appear_in_both = as.factor(ifelse(feature %in% appear_in_both, 1, 0)) )


freqs %>%
  ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
  geom_col(aes(fill=appear_in_both)) +
  facet_wrap(~ group, 
             scales = "free_y") +
  coord_flip() +
  labs(x = "Feature", y = "TF-IDF Weighted Frequency") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1),
        legend.position = 'none')
```

While this sample is small, there are a few intuitive points which can be gleaned from this approach. First, there are several geographic locations which contribute to the similarity measures that should be removed as research progresses - evergreen, pomona, magnolia, and belle haven are either neighborhoods or locations which uniquely identify a certain city, and would ideally be removed. Second, there are a small number of words which appear frequently in both consulted and non-consulted plans, including RHNA, or the Regional Housing Needs Allocation, which measures the need for housing in a community, which may indicate that regardless of consultant use, this metric is used to provide for one form of environmental justice. Finally, while @brinkley2024 found that discussion of race was not frequent in EJ plans, this analysis highlights that both the terms "latinx" and "segregation" appear frequently in consulted plans. While certainly not causal, this suggests that consulted projects are perhaps more likely to include race. Further research would need to investigate this across a broader set of plans, potentially also controlling for racial or ethnic sub-populations within a city.

# Conclusion

This research has made initial progress towards an understanding of how novel topics of planning emerge. I show that two planning elements which are both written by consultants are significantly more likely to be similar than other pairwise comparisons. In this analysis, I make best efforts to limit the corpuses being compared such that they highlight substantively unique features, rather than local details or generic, frequently used terms. However, there are two directions of further effort towards a greater understanding of the role of consultants on planning documents.

First, this research could be performed in greater depth. Here I highlight a correlation between consultant use and similarity, and suggest some of the terms that may be unique to consultants, but there is no proper understanding of what consultants are actually doing differently. Developing hypotheses based on the literature about how consultants act, what tasks they are assigned, and how the complete these would provide one step in this direction. This hypotheses could be tested by moving from term-based models of documents to topic-based models, where semantic meaning is measured rather than the frequency or similarity of various terms. Such an approach would likely require a more atomic view of each document to compare if, when, and where various topics are discussed.

Second, this research could be conducted with greater breadth. Here, the sample reflects a best initial effort at the universe of environmental justice elements, but there EJ elements which are buried within general plans not analyzed here, as well as potential documents not included in the dataset used. Further, cities have the option of developing a standalone EJ element or integrating the necessary materiel within other elements. Afforementioned topic-based models may be similarly useful to parse out where and how city planning documents more broadly discuss EJ and allow for comparison between documents where there is a greater expectation of dissimilarity. Further, a broader dataset would likely include plans which use the same consultant, allowing for an additional level of control in the models.

# Works Cited
